      subroutine band      implicit real (a-h,o-z)cc------------------------------------------------------------------------c      common/mat1/c(200,50),v(200,1),t1(200),t2(200),t3(200),det,     $ n4(4)      common/mat3/gapt(3),wo(3),tf(2,3),dtf(2,3),nint1,nlc,nuc,iband      common/mat5/nnx,nny,nxel,nyel,nntol,nod,nvargcc------------------------------------------------------------------------c      mc=nod      nc=iband      nv=nvargcc     ***** initialize det  *****c      eps=1.0e-15      icount=0      det=1.0cc	*** prepare the matrix c for processing by shifting undefined   ***c	*** elements out of the upper-left-hand corner and inserting    ***c	*** zeros in the lower right-hand-corner                        ***c      nc1=nc+1      lr=nc1/2      mr=lr-1      ii=mc+1      do 60 ir=1,mr         ii=ii-1         nr=lr-ir         jj=nc1         do 40 jr=1,nr            do 20 jc=2,nc               p=c(ir,jc)               k=jc-1               c(ir,k)=p 20         continue            c(ir,nc)=0.0            jj=jj-1            c(ii,jj)=0.0 40      continue 60   continuecc	*** use row operations to eleminate the lower triangular part of a ***c	*** apply these same operations to the right-hand-sides            ***c      do 400 ic=1,mc         ipiv=ic         piv=c(ic,1)         pivmax=abs(piv)         kr=ic+1         if(kr.gt.lr)go to 140c     c	***** find the largest possible pivot in the current column.c         do 120	ir=kr,lr            pivmag=abs(c(ir,1))            if(pivmax.ge.pivmag)go to 120            ipiv=ir            pivmax=pivmag 120     continue         piv=c(ipiv,1)cc	***** check the pivot magnitude *******c 140     continue         if(pivmax.ge.eps)go to 150c     c	**** a nonzero pivot smaller than eps has been found ****c         write(6,*) ' zero pivot ', piv         returncc	**** if necessary , swap row ipiv with row ic ****c 150     continue         if(ipiv.eq.ic)go to 200         det=-det         do 160 jc=1,nc            t=c(ic,jc)            c(ic,jc)=c(ipiv,jc)            c(ipiv,jc)=t 160     continue         do 180 jv=1,nv            t=v(ic,jv)            v(ic,jv)=v(ipiv,jv)            v(ipiv,jv)=t 180     continuecc	***** update the determinant value *****c 200     continue         if(abs(det).ge.1.0e+25)icount=icount+1         if(abs(det).ge.1.0e+25)det=det/abs(det)         det=det*pivcc	***** normalize the pivot row *****c         theta=1./piv         do 220 jc=2,nc            c(ic,jc)=c(ic,jc)*theta 220     continue         do 240 jv=1,nv            v(ic,jv)=v(ic,jv)*theta 240     continuecc	*** eliminate the lower triangular elements in the current column ***c         if(kr.gt.lr)go to 400         do 380 ir=kr,lr            t=c(ir,1)            do 230 jc=2,nc               k=jc-1               c(ir,k)=c(ir,jc)-t*c(ic,jc) 230        continue            c(ir,nc)=0.0            do 360 jv=1,nv               v(ir,jv)=v(ir,jv)-t*v(ic,jv) 360        continue 380     continue         if(lr.eq.mc)go to 400         lr=lr+1 400  continuecc	***** triangularization is complete *****cc	c	***** back-substitute to compute the solution vector(s) ******c      kr=2      lc=mc-1      do 480 ic=1,lc         iv=mc-ic         do 460 jv=1,nv            ii=iv            do 440 jc=2,kr               ii=ii+1               v(iv,jv)=v(iv,jv)-c(iv,jc)*v(ii,jv) 440        continue 460     continue         if(kr.eq.nc) go to 480         kr=kr+1 480  continuecc	****** the matrix equation is solved ******c      return      end